#include <iostream>

using namespace std;

//распознавание вещественного числа
bool D(char* p, int b, int e) {

	//число может быть нулем, в этом случае
	//длина равна единице, а символ '0'
	//возвращаем истину
	if (b == e&&p[b] == '0')return true;

	//если есть знак, опускаем его
	if (p[b] == '-')b++;

	//первая цифра от 1 до 9(не ноль)
	if (p[b] >= '1'&&p[b] <= '9') b++;
	else return false;

	//символы до точки должны быть цифрами
	for (; b <= e&&p[b] != '.'; b++)
		if (p[b]<'0' || p[b]>'9')return false;

	//если число закончилось, дробной части нет,
	//возвращаем ноль
	if (b == e) return true;
	else {

		//последний символ может оказаться точкой,
		//в этом случае возвращаем ложь
		if (p[e] == '.')return false;

		//все остальные символы цифры
		for (b = b + 1; b <= e; b++)
			if (p[b]<'0' || p[b]>'9')return false;

		//последний символ не может быть нулем
		if (p[e] != '0')return true;
		else return false;
	}
}

//распознавание списка чисел
bool S(char* p, int b, int e) {
	//список пуст
	if (b > e)return true;

	//список не должен заканчиваться на запятую
	//ниже это не проверяется, поэтому сразу исключаем
	//данный случай
	if (p[e] == ',')return false;
	do {

		//ищем отрезок от начала до запятой
		int s = b;
		for (; s <= e; s++)
			if (p[s] == ',') break;

		//вызываем метод для распознания числа
		//и сдвигаем начало на место после запятой
		if (!D(p, b, s - 1))return false;
		b = s + 1;
	} while (b <= e);

	//все проверки пройдены
	return true;
}

//размер строки для проверки
#define SIZE 20

//читаем строку и проверяем список ли это
int main() {

	//создаем и читаем строку
	char str[SIZE];
	cin.getline(str, SIZE);

	//выводим результат
	cout << S(str, 0, strlen(str) - 1);

	//выход по нажатию клавиши
	system("pause");
	return 0;
}